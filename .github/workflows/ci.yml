# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Maven CI and Release
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - release
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Get Java version from pom.xml
        id: get_java_version
        run: |
          JAVA_VERSION=""
          for pom in $(find . -name "pom.xml"); do
            echo "Found java.version $pom"
            version=$(xmllint --xpath "string(//properties/java.version | //maven.compiler.source | //maven.compiler.target)" $pom)
            echo "Found properties $version"
            if [ ! -z "$version" ] && [ "$JAVA_VERSION" != "$version" ]; then
              echo "Found java.version $version in $pom"
              JAVA_VERSION=$version
            fi
          done
          
          if [ -z "$JAVA_VERSION" ]; then
            echo "No java.version found in any pom.xml"
            exit 1
          fi
          
          echo "Using Java version: $JAVA_VERSION"
          echo "JAVA_VERSION=$JAVA_VERSION" >> $GITHUB_ENV

      - name: Set up JDK based on pom.xml version
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Configure Maven settings
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: >
            [
              { "id": "lib-web-services-soap", "url": "https://maven.pkg.github.com/dbacilio88/lib-web-services-soap" },
              { "id": "lib-messaging-rabbit-mq", "url": "https://maven.pkg.github.com/dbacilio88/lib-messaging-rabbit-mq" }
            ]
          servers: >
            [
              {
                "id": "lib-web-services-soap",
                "username": "${{ github.actor }}",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              },
              {
                "id": "lib-messaging-rabbit-mq",
                "username": "${{ github.actor }}",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              }
            ]

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Publish to GitHub Packages Apache Maven
        if: github.event_name == 'release'
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}